{
  "benchmark_results": [
    {
      "group_name": "arc_distance", 
      "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance", 
      "records": [
        {
          "name": "arc_distance_pythran_nested_for_loops", 
          "cold_time": null, 
          "warm_time": 0.10692000389099121, 
          "all_warm_times": [
            0.10775494575500488, 
            0.10710906982421875, 
            0.10692000389099121, 
            0.10804986953735352, 
            0.10749983787536621
          ], 
          "std_warm_times": 0.0004125642765191236, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_pythran.py", 
          "rank": 1, 
          "speedup": 59.87967577571886
        }, 
        {
          "name": "arc_distance_theano_broadcast", 
          "cold_time": null, 
          "warm_time": 0.11812305450439453, 
          "all_warm_times": [
            0.11812305450439453, 
            0.11903595924377441, 
            0.12226200103759766, 
            0.12069988250732422, 
            0.12007689476013184
          ], 
          "std_warm_times": 0.001418229294307595, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_theano.py", 
          "rank": 2, 
          "speedup": 54.20055546136395
        }, 
        {
          "name": "arc_distance_numpy_broadcast", 
          "cold_time": null, 
          "warm_time": 0.13182783126831055, 
          "all_warm_times": [
            0.13376593589782715, 
            0.13227105140686035, 
            0.1328439712524414, 
            0.13182783126831055, 
            0.13290190696716309
          ], 
          "std_warm_times": 0.00065420759997265193, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_python.py", 
          "rank": 3, 
          "speedup": 48.565884042349246
        }, 
        {
          "name": "arc_distance_theano_alloc", 
          "cold_time": null, 
          "warm_time": 0.15376615524291992, 
          "all_warm_times": [
            0.15643596649169922, 
            0.15376615524291992, 
            0.1580212116241455, 
            0.1633310317993164, 
            0.15409302711486816
          ], 
          "std_warm_times": 0.0034718119344371943, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_theano.py", 
          "rank": 4, 
          "speedup": 41.63682935829888
        }, 
        {
          "name": "arc_distance_numpy_tile", 
          "cold_time": null, 
          "warm_time": 0.19675517082214355, 
          "all_warm_times": [
            0.21239686012268066, 
            0.2019948959350586, 
            0.20080995559692383, 
            0.19675517082214355, 
            0.19780397415161133
          ], 
          "std_warm_times": 0.0055608337550796302, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_python.py", 
          "rank": 5, 
          "speedup": 32.53960310257122
        }, 
        {
          "name": "arc_distance_numba_for_loops", 
          "cold_time": null, 
          "warm_time": 1.8216149806976318, 
          "all_warm_times": [
            1.8216149806976318
          ], 
          "std_warm_times": 0.0, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_numba.py", 
          "rank": 6, 
          "speedup": 3.5146478453307526
        }, 
        {
          "name": "arc_distance_python_nested_for_loops", 
          "cold_time": null, 
          "warm_time": 6.402335166931152, 
          "all_warm_times": [
            6.402335166931152
          ], 
          "std_warm_times": 0.0, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_python.py", 
          "rank": 7, 
          "speedup": 1.0
        }
      ], 
      "runtime_errors": [
        {
          "name": "arc_distance_parakeet_for_loops", 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/arc_distance/arc_distance_parakeet.py", 
          "error_type": "AssertionError", 
          "error_message": "Invalid shape for IndexMap: shape.2 : array1(int64)", 
          "traceback": "Traceback (most recent call last):\n  File \"run_benchmarks.py\", line 184, in run_benchmarks\n    record = run_benchmark(name, func, args, kwargs, memory=memory)\n  File \"run_benchmarks.py\", line 130, in run_benchmark\n    first_timing = time_once()\n  File \"run_benchmarks.py\", line 126, in time_once\n    func(*args, **kwargs)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/decorators.py\", line 19, in __call__\n    return run_python_fn(self.f, args, kwargs, backend = backend_name)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/run_function.py\", line 145, in run_python_fn\n    return run_untyped_fn(untyped, args, kwargs, backend)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/run_function.py\", line 133, in run_untyped_fn\n    typed_fn, linear_args = specialize(fn, args, kwargs)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/run_function.py\", line 54, in specialize\n    typed_fn = type_inference.specialize(untyped, arg_types)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 532, in specialize\n    typed =  _specialize(fundef, full_arg_types, return_type)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 502, in _specialize\n    typed_fundef = infer_types(fn, arg_types)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 431, in infer_types\n    body = annotator.transform_block(untyped_fn.body)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/transforms/transform.py\", line 422, in transform_block\n    new_stmt = self.transform_stmt(old_stmt)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/transforms/transform.py\", line 399, in transform_stmt\n    return self.transform_Assign(stmt)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/local_inference.py\", line 283, in transform_Assign\n    rhs = self.transform_expr(stmt.rhs)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/local_inference.py\", line 39, in transform_expr\n    result = Transform.transform_expr(self, expr)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/transforms/transform.py\", line 271, in transform_expr\n    result = self.transform_Call(expr)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 88, in transform_Call\n    typed_fn = specialize(untyped_fn, arg_types)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 532, in specialize\n    typed =  _specialize(fundef, full_arg_types, return_type)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 502, in _specialize\n    typed_fundef = infer_types(fn, arg_types)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 431, in infer_types\n    body = annotator.transform_block(untyped_fn.body)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/transforms/transform.py\", line 422, in transform_block\n    new_stmt = self.transform_stmt(old_stmt)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/transforms/transform.py\", line 407, in transform_stmt\n    return self.transform_Return(stmt)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/local_inference.py\", line 318, in transform_Return\n    ret_val = self.transform_expr(stmt.value)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/local_inference.py\", line 39, in transform_expr\n    result = Transform.transform_expr(self, expr)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/transforms/transform.py\", line 281, in transform_expr\n    result = method(expr)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/type_inference/type_inference.py\", line 149, in transform_IndexMap\n    assert isinstance(shape.type, ScalarT), \"Invalid shape for IndexMap: %s : %s\" % (shape, shape.type)\nAssertionError: Invalid shape for IndexMap: shape.2 : array1(int64)\n"
        }
      ], 
      "import_errors": []
    }, 
    {
      "group_name": "growcut", 
      "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/growcut", 
      "records": [
        {
          "name": "growcut_cython", 
          "cold_time": null, 
          "warm_time": 0.00605010986328125, 
          "all_warm_times": [
            0.006086111068725586, 
            0.006084918975830078, 
            0.006505012512207031, 
            0.00605010986328125, 
            0.006103038787841797
          ], 
          "std_warm_times": 0.00017045841982707573, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/growcut/growcut_cython.pyx", 
          "rank": 1, 
          "speedup": 1844.6321327238336
        }, 
        {
          "name": "growcut_parakeet", 
          "cold_time": 0.38634395599365234, 
          "warm_time": 0.006074190139770508, 
          "all_warm_times": [
            0.006598949432373047, 
            0.006074190139770508, 
            0.006345987319946289, 
            0.006242036819458008, 
            0.0061550140380859375
          ], 
          "std_warm_times": 0.00018190718249056056, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/growcut/growcut_parakeet.py", 
          "rank": 2, 
          "speedup": 1837.3193468618754
        }, 
        {
          "name": "growcut_pythran", 
          "cold_time": null, 
          "warm_time": 0.009858846664428711, 
          "all_warm_times": [
            0.014767169952392578, 
            0.010904073715209961, 
            0.014066934585571289, 
            0.010432004928588867, 
            0.009858846664428711
          ], 
          "std_warm_times": 0.0020086552791433615, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/growcut/growcut_pythran.py", 
          "rank": 3, 
          "speedup": 1132.0012817102368
        }, 
        {
          "name": "growcut_numba", 
          "cold_time": 0.745354175567627, 
          "warm_time": 0.044801950454711914, 
          "all_warm_times": [
            0.045385122299194336, 
            0.04609107971191406, 
            0.04546213150024414, 
            0.044801950454711914, 
            0.05261802673339844
          ], 
          "std_warm_times": 0.0029020785223777411, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/growcut/growcut_numba.py", 
          "rank": 4, 
          "speedup": 249.1013660576969
        }, 
        {
          "name": "growcut_python", 
          "cold_time": null, 
          "warm_time": 11.160227060317993, 
          "all_warm_times": [
            11.160227060317993
          ], 
          "std_warm_times": 0.0, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/growcut/growcut_python.py", 
          "rank": 5, 
          "speedup": 1.0
        }
      ], 
      "runtime_errors": [], 
      "import_errors": []
    }, 
    {
      "group_name": "julia", 
      "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia", 
      "records": [
        {
          "name": "julia_pyopencl", 
          "cold_time": 0.011639833450317383, 
          "warm_time": 0.0024008750915527344, 
          "all_warm_times": [
            0.0024008750915527344, 
            0.0030210018157958984, 
            0.002566099166870117, 
            0.0024220943450927734, 
            0.0024449825286865234
          ], 
          "std_warm_times": 0.00023217296717665387, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_pyopencl.py", 
          "rank": 1, 
          "speedup": 1999.5200595829197
        }, 
        {
          "name": "julia_pythran_for_loops", 
          "cold_time": 0.005201101303100586, 
          "warm_time": 0.002444028854370117, 
          "all_warm_times": [
            0.0027670860290527344, 
            0.002444028854370117, 
            0.002521991729736328, 
            0.002454996109008789, 
            0.0028231143951416016
          ], 
          "std_warm_times": 0.00016069289130579844, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_pythran.py", 
          "rank": 2, 
          "speedup": 1964.2149058628427
        }, 
        {
          "name": "julia_cython_for_loops", 
          "cold_time": null, 
          "warm_time": 0.003847837448120117, 
          "all_warm_times": [
            0.004011869430541992, 
            0.0038712024688720703, 
            0.003901958465576172, 
            0.003847837448120117, 
            0.003854990005493164
          ], 
          "std_warm_times": 6.0108647941174965e-05, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_cython.pyx", 
          "rank": 3, 
          "speedup": 1247.6093314331742
        }, 
        {
          "name": "julia_python_numpy", 
          "cold_time": null, 
          "warm_time": 0.17354607582092285, 
          "all_warm_times": [
            0.17763996124267578, 
            0.17354607582092285, 
            0.17838287353515625, 
            0.2263031005859375, 
            0.20789408683776855
          ], 
          "std_warm_times": 0.020778220189568913, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_python.py", 
          "rank": 4, 
          "speedup": 27.66180614228505
        }, 
        {
          "name": "julia_python_for_loops", 
          "cold_time": null, 
          "warm_time": 4.800597906112671, 
          "all_warm_times": [
            4.800597906112671
          ], 
          "std_warm_times": 0.0, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_python.py", 
          "rank": 5, 
          "speedup": 1.0
        }
      ], 
      "runtime_errors": [
        {
          "name": "julia_numba_for_loops", 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_numba.py", 
          "error_type": "NumbaError", 
          "error_message": "(see below)\n--------------------- Numba Encountered Errors or Warnings ---------------------\n    for i, x in enumerate(grid_x):\n--------^\nError 23:8: Only a single target iteration variable is supported at the moment\n--------------------------------------------------------------------------------", 
          "traceback": "Traceback (most recent call last):\n  File \"run_benchmarks.py\", line 184, in run_benchmarks\n    record = run_benchmark(name, func, args, kwargs, memory=memory)\n  File \"run_benchmarks.py\", line 130, in run_benchmark\n    first_timing = time_once()\n  File \"run_benchmarks.py\", line 126, in time_once\n    func(*args, **kwargs)\n  File \"numbawrapper.pyx\", line 189, in numba.numbawrapper._NumbaSpecializingWrapper.__call__ (numba/numbawrapper.c:3726)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/wrapping/compiler.py\", line 68, in compile_from_args\n    return self.compile(signature)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/wrapping/compiler.py\", line 83, in compile\n    compiled_function = dec(self.py_func)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/decorators.py\", line 222, in _jit_decorator\n    env, func, argtys, restype=return_type, nopython=nopython, **kwargs)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/decorators.py\", line 133, in compile_function\n    func_env = pipeline.compile2(env, func, restype, argtypes, **kwds)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/pipeline.py\", line 134, in compile2\n    post_ast = pipeline(func_ast, env)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/pipeline.py\", line 181, in __call__\n    ast = self.transform(ast, env)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/pipeline.py\", line 602, in transform\n    ast = stage(ast, env)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/pipeline.py\", line 587, in _stage\n    return _check_stage_object(stage_obj)(ast, env)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/pipeline.py\", line 192, in __call__\n    reporting.report(env, exc=e)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/numba/reporting.py\", line 181, in report\n    raise exc\nNumbaError: (see below)\n--------------------- Numba Encountered Errors or Warnings ---------------------\n    for i, x in enumerate(grid_x):\n--------^\nError 23:8: Only a single target iteration variable is supported at the moment\n--------------------------------------------------------------------------------\n"
        }, 
        {
          "name": "julia_parakeet_for_loops", 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_parakeet.py", 
          "error_type": "AssertionError", 
          "error_message": "Unsupported primitive: <type 'numpy.uint32'>", 
          "traceback": "Traceback (most recent call last):\n  File \"run_benchmarks.py\", line 184, in run_benchmarks\n    record = run_benchmark(name, func, args, kwargs, memory=memory)\n  File \"run_benchmarks.py\", line 130, in run_benchmark\n    first_timing = time_once()\n  File \"run_benchmarks.py\", line 126, in time_once\n    func(*args, **kwargs)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/decorators.py\", line 19, in __call__\n    return run_python_fn(self.f, args, kwargs, backend = backend_name)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/run_function.py\", line 144, in run_python_fn\n    untyped = ast_conversion.translate_function_value(fn)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 879, in translate_function_value\n    filename = filename)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 825, in translate_function_source\n    filename = filename)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 769, in translate_function_ast\n    _, body = translator.visit_block(body)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 731, in visit_block\n    parakeet_stmt = self.visit(stmt)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 470, in visit\n    res = ast.NodeVisitor.visit(self, node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 241, in visit\n    return visitor(node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 662, in visit_Assign\n    ssa_rhs = self.visit(stmt.value)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 470, in visit\n    res = ast.NodeVisitor.visit(self, node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 241, in visit\n    return visitor(node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 501, in visit_Call\n    keywords_dict[kwd.arg] = self.visit(kwd.value)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 470, in visit\n    res = ast.NodeVisitor.visit(self, node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 241, in visit\n    return visitor(node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 616, in visit_Attribute\n    return value_to_syntax(value)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 111, in value_to_syntax\n    return translate_function_value(v)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 841, in translate_function_value\n    \"Unsupported primitive: %s\" % (fn,)\nAssertionError: Unsupported primitive: <type 'numpy.uint32'>\n"
        }, 
        {
          "name": "julia_parakeet_numpy", 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/julia/julia_parakeet.py", 
          "error_type": "AssertionError", 
          "error_message": "Unsupported primitive: <built-in function geterrobj>", 
          "traceback": "Traceback (most recent call last):\n  File \"run_benchmarks.py\", line 184, in run_benchmarks\n    record = run_benchmark(name, func, args, kwargs, memory=memory)\n  File \"run_benchmarks.py\", line 130, in run_benchmark\n    first_timing = time_once()\n  File \"run_benchmarks.py\", line 126, in time_once\n    func(*args, **kwargs)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/decorators.py\", line 19, in __call__\n    return run_python_fn(self.f, args, kwargs, backend = backend_name)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/run_function.py\", line 144, in run_python_fn\n    untyped = ast_conversion.translate_function_value(fn)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 879, in translate_function_value\n    filename = filename)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 825, in translate_function_source\n    filename = filename)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 769, in translate_function_ast\n    _, body = translator.visit_block(body)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 731, in visit_block\n    parakeet_stmt = self.visit(stmt)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 470, in visit\n    res = ast.NodeVisitor.visit(self, node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 241, in visit\n    return visitor(node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 662, in visit_Assign\n    ssa_rhs = self.visit(stmt.value)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 470, in visit\n    res = ast.NodeVisitor.visit(self, node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 241, in visit\n    return visitor(node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 537, in visit_Call\n    positional, keywords_dict, starargs_expr)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 481, in translate_value_call\n    return syntax.Call(translate_function_value(value),\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 879, in translate_function_value\n    filename = filename)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 825, in translate_function_source\n    filename = filename)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 769, in translate_function_ast\n    _, body = translator.visit_block(body)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 731, in visit_block\n    parakeet_stmt = self.visit(stmt)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 470, in visit\n    res = ast.NodeVisitor.visit(self, node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 241, in visit\n    return visitor(node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 662, in visit_Assign\n    ssa_rhs = self.visit(stmt.value)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 470, in visit\n    res = ast.NodeVisitor.visit(self, node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ast.py\", line 241, in visit\n    return visitor(node)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 537, in visit_Call\n    positional, keywords_dict, starargs_expr)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 484, in translate_value_call\n    return self.translate_builtin_call(value, positional, keywords_dict)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 465, in translate_builtin_call\n    fn = value_to_syntax(value)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 111, in value_to_syntax\n    return translate_function_value(v)\n  File \"/usr/local/Cellar/python/2.7.5/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/parakeet/frontend/ast_conversion.py\", line 841, in translate_function_value\n    \"Unsupported primitive: %s\" % (fn,)\nAssertionError: Unsupported primitive: <built-in function geterrobj>\n"
        }
      ], 
      "import_errors": []
    }, 
    {
      "group_name": "pairwise", 
      "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise", 
      "records": [
        {
          "name": "pairwise_theano_blas_float32", 
          "cold_time": null, 
          "warm_time": 0.0008141994476318359, 
          "all_warm_times": [
            0.001344919204711914, 
            0.0009400844573974609, 
            0.0008141994476318359, 
            0.0008900165557861328, 
            0.0008721351623535156
          ], 
          "std_warm_times": 0.00019062122297471929, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_theano.py", 
          "rank": 1, 
          "speedup": 31745.113909224012
        }, 
        {
          "name": "pairwise_theano_blas_float64", 
          "cold_time": null, 
          "warm_time": 0.001516103744506836, 
          "all_warm_times": [
            0.0017421245574951172, 
            0.0022079944610595703, 
            0.001516103744506836, 
            0.0019598007202148438, 
            0.0016510486602783203
          ], 
          "std_warm_times": 0.0002436968935818051, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_theano.py", 
          "rank": 2, 
          "speedup": 17048.20946689731
        }, 
        {
          "name": "pairwise_python_numpy_dot", 
          "cold_time": null, 
          "warm_time": 0.0018911361694335938, 
          "all_warm_times": [
            0.0022101402282714844, 
            0.0023050308227539062, 
            0.002296924591064453, 
            0.0018911361694335938, 
            0.002031087875366211
          ], 
          "std_warm_times": 0.00016145565350048495, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_python.py", 
          "rank": 3, 
          "speedup": 13667.368129097327
        }, 
        {
          "name": "pairwise_pyopencl_cpu", 
          "cold_time": null, 
          "warm_time": 0.0020339488983154297, 
          "all_warm_times": [
            0.0035750865936279297, 
            0.0020401477813720703, 
            0.0020339488983154297, 
            0.002187967300415039, 
            0.002811908721923828
          ], 
          "std_warm_times": 0.00059576616182109229, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_pyopencl.py", 
          "rank": 4, 
          "speedup": 12707.720548587504
        }, 
        {
          "name": "pairwise_cython_for_loops", 
          "cold_time": null, 
          "warm_time": 0.012613058090209961, 
          "all_warm_times": [
            0.013516902923583984, 
            0.012784957885742188, 
            0.012974977493286133, 
            0.012613058090209961, 
            0.012985944747924805
          ], 
          "std_warm_times": 0.00030361040046515149, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_cython.pyx", 
          "rank": 5, 
          "speedup": 2049.2139198155114
        }, 
        {
          "name": "pairwise_numba_nested_for_loops", 
          "cold_time": 0.2756321430206299, 
          "warm_time": 0.01361989974975586, 
          "all_warm_times": [
            0.01361989974975586, 
            0.014117002487182617, 
            0.013648033142089844, 
            0.013911962509155273, 
            0.013967037200927734
          ], 
          "std_warm_times": 0.00019106296690794326, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_numba.py", 
          "rank": 6, 
          "speedup": 1897.7271995238596
        }, 
        {
          "name": "pairwise_parakeet_nested_for_loops", 
          "cold_time": 0.17906999588012695, 
          "warm_time": 0.015487909317016602, 
          "all_warm_times": [
            0.08546090126037598, 
            0.015487909317016602, 
            0.015588998794555664, 
            0.0171511173248291, 
            0.01622915267944336
          ], 
          "std_warm_times": 0.027744974247875212, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_parakeet.py", 
          "rank": 7, 
          "speedup": 1668.8407506042088
        }, 
        {
          "name": "pairwise_pythran_nested_for_loops", 
          "cold_time": null, 
          "warm_time": 0.015964984893798828, 
          "all_warm_times": [
            0.016126155853271484, 
            0.016094207763671875, 
            0.017147064208984375, 
            0.015964984893798828, 
            0.016312837600708008
          ], 
          "std_warm_times": 0.00042385620209799292, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_pythran.py", 
          "rank": 8, 
          "speedup": 1618.971416624354
        }, 
        {
          "name": "pairwise_parakeet_inner_numpy", 
          "cold_time": 0.281688928604126, 
          "warm_time": 0.01669788360595703, 
          "all_warm_times": [
            0.07736611366271973, 
            0.08200597763061523, 
            0.01685500144958496, 
            0.01669788360595703, 
            0.015780925750732422
          ], 
          "std_warm_times": 0.031018746604326929, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_parakeet.py", 
          "rank": 9, 
          "speedup": 1547.9119881203953
        }, 
        {
          "name": "pairwise_theano_broadcast_float32", 
          "cold_time": null, 
          "warm_time": 0.03778886795043945, 
          "all_warm_times": [
            0.05676603317260742, 
            0.03778886795043945, 
            0.04010891914367676, 
            0.038970947265625, 
            0.038333892822265625
          ], 
          "std_warm_times": 0.0072275297742233511, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_theano.py", 
          "rank": 10, 
          "speedup": 683.9806432888743
        }, 
        {
          "name": "pairwise_theano_broadcast_float64", 
          "cold_time": null, 
          "warm_time": 0.05193209648132324, 
          "all_warm_times": [
            0.05447196960449219, 
            0.05333995819091797, 
            0.05193209648132324, 
            0.05452299118041992, 
            0.05573296546936035
          ], 
          "std_warm_times": 0.0012815088413722408, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_theano.py", 
          "rank": 11, 
          "speedup": 497.7048099568908
        }, 
        {
          "name": "pairwise_python_broadcast_numpy", 
          "cold_time": null, 
          "warm_time": 0.10322713851928711, 
          "all_warm_times": [
            0.17538905143737793, 
            0.11033415794372559, 
            0.11216592788696289, 
            0.10322713851928711, 
            0.11186099052429199
          ], 
          "std_warm_times": 0.026595633765615662, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_python.py", 
          "rank": 12, 
          "speedup": 250.388169047916
        }, 
        {
          "name": "pairwise_python_inner_numpy", 
          "cold_time": null, 
          "warm_time": 1.9391920566558838, 
          "all_warm_times": [
            1.9391920566558838
          ], 
          "std_warm_times": 0.0, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_python.py", 
          "rank": 13, 
          "speedup": 13.328671660543273
        }, 
        {
          "name": "pairwise_python_nested_for_loops", 
          "cold_time": null, 
          "warm_time": 25.846854209899902, 
          "all_warm_times": [
            25.846854209899902
          ], 
          "std_warm_times": 0.0, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/pairwise/pairwise_python.py", 
          "rank": 14, 
          "speedup": 1.0
        }
      ], 
      "runtime_errors": [], 
      "import_errors": []
    }, 
    {
      "group_name": "rosen_der", 
      "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der", 
      "records": [
        {
          "name": "rosen_der_pythran", 
          "cold_time": null, 
          "warm_time": 0.00475311279296875, 
          "all_warm_times": [
            0.00475311279296875, 
            0.004909038543701172, 
            0.005269050598144531, 
            0.008346080780029297, 
            0.010488033294677734
          ], 
          "std_warm_times": 0.0022843042084848379, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_pythran.py", 
          "rank": 1, 
          "speedup": 2212.466342295345
        }, 
        {
          "name": "rosen_der_cython", 
          "cold_time": null, 
          "warm_time": 0.006011009216308594, 
          "all_warm_times": [
            0.006828784942626953, 
            0.006011009216308594, 
            0.0061910152435302734, 
            0.0060350894927978516, 
            0.006215095520019531
          ], 
          "std_warm_times": 0.00029759049852767577, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_cython.pyx", 
          "rank": 2, 
          "speedup": 1749.4736236712677
        }, 
        {
          "name": "rosen_der_theano_float32", 
          "cold_time": 0.014698028564453125, 
          "warm_time": 0.007063865661621094, 
          "all_warm_times": [
            0.007608890533447266, 
            0.007063865661621094, 
            0.0074269771575927734, 
            0.007135868072509766, 
            0.007194042205810547
          ], 
          "std_warm_times": 0.00020222379978834299, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_theano.py", 
          "rank": 3, 
          "speedup": 1488.7177332253275
        }, 
        {
          "name": "rosen_der_theano_float64", 
          "cold_time": null, 
          "warm_time": 0.009051084518432617, 
          "all_warm_times": [
            0.01320505142211914, 
            0.00905299186706543, 
            0.009051084518432617, 
            0.009057998657226562, 
            0.00927114486694336
          ], 
          "std_warm_times": 0.0016408562656319999, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_theano.py", 
          "rank": 4, 
          "speedup": 1161.8609962331743
        }, 
        {
          "name": "rosen_der_loops_parakeet", 
          "cold_time": 0.2964208126068115, 
          "warm_time": 0.011566162109375, 
          "all_warm_times": [
            0.13219499588012695, 
            0.14278888702392578, 
            0.011566162109375, 
            0.013947010040283203, 
            0.014223098754882812
          ], 
          "std_warm_times": 0.060967236912644315, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_parakeet.py", 
          "rank": 5, 
          "speedup": 909.2127514841688
        }, 
        {
          "name": "rosen_der_numpy_parakeet", 
          "cold_time": 0.5553438663482666, 
          "warm_time": 0.016228914260864258, 
          "all_warm_times": [
            0.19855308532714844, 
            0.016228914260864258, 
            0.02042698860168457, 
            0.01912689208984375, 
            0.020821094512939453
          ], 
          "std_warm_times": 0.071778898064393623, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_parakeet.py", 
          "rank": 6, 
          "speedup": 647.9855587712468
        }, 
        {
          "name": "rosen_der_numpy", 
          "cold_time": null, 
          "warm_time": 0.04386401176452637, 
          "all_warm_times": [
            0.058882951736450195, 
            0.047991037368774414, 
            0.04386401176452637, 
            0.04518485069274902, 
            0.0448307991027832
          ], 
          "std_warm_times": 0.0055389605449870849, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_python.py", 
          "rank": 7, 
          "speedup": 239.7432804830986
        }, 
        {
          "name": "rosen_der_python", 
          "cold_time": null, 
          "warm_time": 10.516102075576782, 
          "all_warm_times": [
            10.516102075576782
          ], 
          "std_warm_times": 0.0, 
          "source_url": "https://github.com/numfocus/python-benchmarks/tree/master/rosen_der/rosen_der_python.py", 
          "rank": 8, 
          "speedup": 1.0
        }
      ], 
      "runtime_errors": [], 
      "import_errors": []
    }
  ], 
  "benchmark_environment": {}
}